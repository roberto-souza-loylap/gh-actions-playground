name: Playground
on:
  workflow_dispatch:
defaults:
  run:
    shell: bash

jobs:
  check-gh-objects:
    runs-on: ubuntu-latest
    steps:
      - name: showGithubContextObject
        run: |
          echo '${{toJson(github)}}'

      - id: fetchUserEvents
        name: Fetch user's public events
        run: |
          eventesResponse=`gh api -H "Accept: application/vnd.github+json" /users/${{github.actor}}/events/public`
          echo ${eventesResponse} | jq --compact-output '.[].payload.commits[]?.author' >> ./user-events.json
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: getUserEvents
        name: Parse user's events
        run: |
          IDTOKEN=$(curl -H "Authorization: bearer $" $ -H "Accept: application/json; api-version=2.0" -H "Content-Type: application/json" -d "{}" | jq -r '.value')
          echo $IDTOKEN
          jwtd() {
              if [[ -x $(command -v jq) ]]; then
                  jq -R 'split(".") | .[0],.[1] | @base64d | fromjson' <<< "${1}"
                  echo "Signature: $(echo "${1}" | awk -F'.' '{print $3}')"
              fi
          }
          jwtd $IDTOKEN
          echo "::set-output name=idToken::${IDTOKEN}"

          # while read line
          # do
          #   jq -R '. | fromjson' <<< "${line}"
          #   echo "${line}" | awk -F'.' '{print $email}'
          #   # echo ${line} | jq -R '. | fromjson' >> objLine
          #   # echo ${objLine.email}
          #   # echo ${objLine.name}
          # done < ./user-events.json
          # echo "::set-output name=userEvents::$varArr"

      - id: getUserNameAndEmail
        name: Get user config name and email
        run: |
          userEvents=${{steps.getUserEvents.outputs.userEvents}}
          echo "$userEvents"
          userName=null
          userEmail=null
          i=0
          while [$userEvents[$i]]
          do
            echo $userEvents[$i].payload.commits.author
            $i = $i + 1
          done
