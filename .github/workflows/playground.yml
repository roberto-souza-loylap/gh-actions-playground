name: Playground
on:
  workflow_dispatch:
defaults:
  run:
    shell: bash

jobs:
  check-gh-objects:
    runs-on: ubuntu-latest
    steps:
      - name: showGithubContextObject
        run: |
          echo '${{toJson(github)}}'

      - id: fetchUserEvents
        name: Fetch user's public events
        run: |
          eventesResponse=`gh api -H "Accept: application/vnd.github+json" /users/${{github.actor}}/events/public`
          echo ${eventesResponse} | jq --compact-output '.[].payload.commits[]?.author' >> ./user-events.json
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: parseUserEvents
        name: Parse user's events
        run: |
          hasEmailFound=false
          while read line
          do
            email=`jq '.email' <<< "${line}"`
            # if found a bot email, continue searching
            if [[ $email != *"users.noreply.github.com"* ]]
            then
              name=`jq '.name' <<< "${line}"`
              echo "::set-output name=userEmail::$email"
              echo "::set-output name=userName::$name"
              $hasEmailFound=true
              break
            fi
          done < ./user-events.json
          # if email not found on user's public events API page, use a fallback
          if [[ !$hasEmailFound ]]
          then
              echo "::set-output name=userEmail::bot.cicd@loylap.com"
              echo "::set-output name=userName::Bot CI/CD"
          fi
      - id: getUserNameAndEmail
        name: Get user config name and email
        run: |
          echo "email: "${{steps.parseUserEvents.outputs.userEmail}}
          echo "name: "${{steps.parseUserEvents.outputs.userName}}
